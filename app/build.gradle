plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.floriantrecul.pokedex"
        minSdk 21
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
            buildConfigField "String", 'BASE_URL' , "\"https://pokeapi.co/api/v2/\""
            buildConfigField "String", 'POKEMON_IMAGE_URL' , "\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/\""
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", 'BASE_URL' , "\"https://pokeapi.co/api/v2/\""
            buildConfigField "String", 'POKEMON_IMAGE_URL' , "\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/\""
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion composeVersion
    }
}

dependencies {

    // ==============================================================
    // Google libraries sorted by product name in alphabetical order

    implementation "androidx.core:core-ktx:$ktxVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "com.google.android.material:material:$materialVersion"

    // Activity Compose
    implementation "androidx.activity:activity-compose:$activityComposeVersion"

    // Coil Compose
    implementation("io.coil-kt:coil-compose:$coilComposeVersion")

    // Constraint Layout
    implementation "androidx.constraintlayout:constraintlayout-compose:$constraintLayoutComposeVersion"

    // Compose
    implementation "androidx.compose.ui:ui:$composeVersion"
    implementation "androidx.compose.material:material:$composeVersion"
    implementation "androidx.compose.ui:ui-tooling:$composeVersion"
    implementation "androidx.compose.material:material-icons-extended:$composeVersion"

    // Dagger Hilt - Dependency Injection
    implementation "com.google.dagger:hilt-android:$daggerHiltVersion"
    implementation "androidx.hilt:hilt-navigation-compose:$daggerHiltNavigationComposeVersion"
    kapt "com.google.dagger:hilt-compiler:$daggerHiltVersion"
    kapt "androidx.hilt:hilt-compiler:$daggerHiltCompilerVersion"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"

    // Navigation Compose
    implementation "androidx.navigation:navigation-compose:$navigationComposeVersion"

    // ==============================================================
    // Party libraries sorted by product name in alphabetical order

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    // Moshi
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"

    // OkHttp
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpLoggingInterceptorVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"

    // ==============================================================
    // Testing libraries

    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$testExtJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$composeVersion"
}